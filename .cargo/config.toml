# Configuration for Cargo builds

# Settings specific to the Solana BPF target
[target.'cfg(target_arch = "bpf")']
rustflags = [
  # Prevent linker from creating .data.* / .bss.* subsections
  # See: https://github.com/solana-labs/rbpf/issues/408
  "-C",
  "link-arg=-Wl,--no-data-sections",
]

# Note: Solana uses bpfel-unknown-unknown, but cfg(target_arch = "bpf") matches it.
# Explicitly define for bpfel-unknown-unknown to be certain.
[target.bpfel-unknown-unknown]
rustflags = [
  # Prevent linker from creating .data.* / .bss.* subsections
  "-C",
  "link-arg=-Wl,--no-data-sections",
]

# Set linker arguments specifically for macOS targets (x86_64)
# This ensures Rust links with the same deployment target used
# when compiling the C++ code in verus/build.sh.
[target.x86_64-apple-darwin]
rustflags = ["-C", "link-arg=-mmacosx-version-min=10.14"]

# If you also build for Apple Silicon (aarch64), you might need a similar entry:
# [target.aarch64-apple-darwin]
# rustflags = ["-C", "link-arg=-mmacosx-version-min=11.0"] # Adjust version if needed
